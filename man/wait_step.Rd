% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/core_queuefunctions.R
\name{wait_step}
\alias{wait_step}
\title{Compute maximum time from two vectors of arrival times.}
\usage{
wait_step(arrival_df1, arrival_df2)
}
\arguments{
\item{arrival_df1}{A dataframe with column names ID and times . The ID column is a key
for the customers. The times column is of class \code{numeric} and represents the
arrival times of the customers.}

\item{arrival_df2}{A dataframe with column names ID and times . The ID column is a key
for the customers. The times column is of class \code{numeric} and represents the
arrival times of the customers.}
}
\value{
The maximum time from two vectors of arrival times.
}
\description{
Compute maximum time from two vectors of arrival times.
}
\details{
A good real-world example of this is finding the departure times for passengers
 after they pick up their bags from the baggage carosel. The time at which they leave is
 the maximum of the passenger and bag arrival times.
}
\examples{
set.seed(500)
arrivals <- data.frame(ID = c(1:100), times = rlnorm(100, meanlog = 4))
service <- rlnorm(100)

#Airport example ------------------------

# Create a number of bags for each of 100 customers
bags <- rpois(100,1)
bags.df <- data.frame(BagID = 1:sum(bags),
   ID = rep(1:100, bags), times = rlnorm(sum(bags), meanlog = 2))

# Find when the last bag for each customer arrives
arrivals2 <- reduce_bags(bags.df, 100)

# Find the time when customers can leave with their bags.
wait_step(arrival_df1 = arrivals, arrival_df2 = arrivals2)
}
\seealso{
\code{\link[queuecomputer]{lag_step}}, \code{\link[queuecomputer]{queue_step}}
}

