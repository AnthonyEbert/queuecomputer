% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/core_queuefunctions.R
\name{queue_step}
\alias{queue_step}
\title{Compute the departure times and queue lengths for a queueing system from arrival and service times.}
\usage{
queue_step(arrivals, service, servers = 1, labels = NULL, adjust = 1)
}
\arguments{
\item{arrivals}{numeric vector of non-negative arrival times}

\item{service}{numeric vector of service times with the same ordering as arrival_df.}

\item{servers}{a non-zero natural number, an object of class \code{server.stepfun}
or an object of class \code{server.list}.}

\item{labels}{character vector of customer labels.}

\item{adjust}{non-negative number, an adjustment parameter for scaling the service times.}
}
\value{
A vector of response times for the input of arrival times and service times.
}
\description{
Compute the departure times and queue lengths for a queueing system from arrival and service times.
}
\examples{
# We simulate two queues in series.
set.seed(1L)
n_customers <- 100

arrivals <- rlnorm(n_customers, meanlog = 3)
service_1 <- rlnorm(n_customers)


firstqueue <- queue_step(arrivals,
    servers = 2, service = service_1)

server_list <- as.server.stepfun(c(50),c(1,2))

service_2 <- rlnorm(n_customers)
secondqueue <- queue_step(firstqueue,
    servers = server_list, service = service_2)

curve(ecdf(arrivals)(x) * n_customers , from = 0, to = 200,
    xlab = "time", ylab = "Number of customers")
curve(ecdf(firstqueue$departures_df$departures)(x) * n_customers , add = TRUE, col = "red")
curve(ecdf(secondqueue$departures_df$departures)(x) * n_customers, add = TRUE, col = "blue")
legend(100,40, legend = c("Customer input - arrivals",
    "Customer output - firstqueue",
    "Customer output - secondqueue"),
    col = c("black","red","blue"), lwd = 1, cex = 0.8
)

summary(firstqueue)
summary(secondqueue)

}
\seealso{
\code{\link{queue}}, \code{\link{summary.queue_list}}, \code{\link{plot.queue_list}}
}

